[{"instruction": "void foo(void)\n{\nint * p = NULL;\nint size;\n\nsize = 10;\n\np = (int *)malloc(size * sizeof(int));\n\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint * p = (int *)malloc(sizeof(int));\n\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nchar * p = NULL;\nint size = 10;\n\np = (char *)malloc(size * sizeof(char));\n\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nchar * p = (char *)malloc(sizeof(char));\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint * p = NULL;\n\np = (int *)malloc(2 * sizeof(int));\n\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint * p = (int *)malloc(2 * sizeof(char));\n}\n", "input": "", "output": "1"}, {"instruction": "struct testStruct_1 {\nchar a;\nshort b;\nint c;\n};\n\n\nvoid foo(void)\n{\nstruct testStruct_1 * p = NULL;\np = (struct testStruct_1 *)malloc(sizeof(struct testStruct_1));\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "struct testStruct_1 {\nchar a;\nshort b;\nint c;\n};\n\nvoid foo(void)\n{\nstruct testStruct_1 * p;\np = malloc(sizeof(struct testStruct_1 *));\n}\n", "input": "", "output": "1"}, {"instruction": "struct testStruct_1 {\nchar a;\nshort b;\nint c;\n};\n\nvoid foo(void)\n{\nstruct testStruct_1 * p = NULL;\np = (struct testStruct_1 *)malloc(sizeof(struct testStruct_1));\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "struct testStruct_1 {\nchar a;\nshort b;\nint c;\n};\n\nvoid foo(void)\n{\nstruct testStruct_1 * p;\n\np = (struct testStruct_1 *)malloc(sizeof(int));\n}\n", "input": "", "output": "1"}, {"instruction": "struct testStruct_1 {\nchar a;\nshort b;\nint c;\n};\n\nvoid foo(void)\n{\nstruct testStruct_1 * p = NULL;\np = (struct testStruct_1 *)malloc(sizeof(struct testStruct_1));\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "struct testStruct_1 {\nchar a;\nshort b;\nint c;\n};\n\nvoid foo(void)\n{\nstruct testStruct_1 * p;\n\np = (struct testStruct_1 *)malloc(sizeof(8 * char));\n}\n", "input": "", "output": "1"}, {"instruction": "struct testStruct_2 {\nint a;\n};\n\nstruct node {\nstruct node * next;\nstruct node * pre;\nstruct testStruct_2 * p;\n};\n\nvoid foo(void)\n{\nstruct node * p = NULL;\np = (struct node *)malloc(sizeof(struct node));\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "struct testStruct_2 {\nint a;\n};\n\nstruct node {\nstruct node * next;\nstruct node * pre;\nstruct testStruct_2 * p;\n};\n\nvoid foo(void)\n{\nstruct node * p;\np = malloc(sizeof(struct testStruct_2));\n}\n", "input": "", "output": "1"}, {"instruction": "struct testStruct_2 {\nint a;\n};\n\nstruct node {\nstruct node * next;\nstruct node * pre;\nstruct testStruct_2 * p;\n};\n\nvoid foo(void)\n{\nstruct node * p = NULL;\np = (struct node *)malloc(sizeof(struct node));\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "struct testStruct_2 {\nint a;\n};\n\nstruct node {\nstruct node * next;\nstruct node * pre;\nstruct testStruct_2 * p;\n};\n\nvoid foo(void)\n{\nstruct node * p;\np = malloc(sizeof(struct node *));\n}\n", "input": "", "output": "1"}, {"instruction": "struct testStruct_2 {\nint a;\n};\n\nstruct node {\nstruct node * next;\nstruct node * pre;\nstruct testStruct_2 * p;\n};\n\nvoid foo(void)\n{\nstruct node * p = NULL;\np = (struct node *)malloc(sizeof(struct node));\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "struct testStruct_2 {\nint a;\n};\n\nstruct node {\nstruct node * next;\nstruct node * pre;\nstruct testStruct_2 * p;\n};\n\nvoid foo(void)\n{\nstruct node * p;\np = malloc(sizeof(4 * int));\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint i;\n\nfor(i = 0; i < 10; i++)\n{\nint * p = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\n}\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint i;\nint * p;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\n}\nfree(p);\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint i;\n\nfor(i = 0; i < 10; i++)\n{\nint * p = malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\n}\nfree(p);\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\n\nfor(i = 0; i < 10; i++)\n{\nfree(p);\n}\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\nfree(p);\n}\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\n}\n\nfor(i = 0; i < 10; i++)\n{\nfree(p);\n}\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 5; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n{\nfree(p);\nfree(p);\n}\n}\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\n}\n\nfor(i = 0; i < 5; i++)\n{\nfree(p);\n}\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 5; i++)\n{\np = (int *)malloc(sizeof(int));\n}\n\nfor(i = 0; i < 10; i++)\n{\nfree(p);\n}\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint * ptr1 = NULL;\nint * ptr2 = NULL;\n\nptr1 = (int*)malloc(sizeof(int));\nif(ptr1 != NULL)\nfree(ptr1);\n\nptr2 = (int*)malloc(sizeof(int));\nif(ptr2 != NULL)\nfree(ptr2);\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint* ptr = (int*)malloc(sizeof(int));\n\nint* ptr = (int*)malloc(sizeof(int));\nfree(ptr);\nfree(ptr);\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint * ptr = NULL;\n\nptr = (int*)malloc(sizeof(int));\nif(ptr != NULL)\n{\n*ptr = 10;\nfree(ptr);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint* ptr = (int*)malloc(sizeof(int));\nfree(ptr);\n\n*ptr = 10;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint* ptr = (int*)malloc(sizeof(int) * 10);\n\nptr[8] = 10;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint* ptr = (int*)malloc(sizeof(int) * 10);\nptr[10] = 10;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint a[10];\nint* ptr = a;\nptr++;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint a = 10;\nint* ptr = &a;\nptr++;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint* ptr;\nint a;\n\nptr = &a;\n*ptr = 10;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint* ptr;\n*ptr = 10;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(void)\n{\nint* ptr = (int*)malloc(sizeof(int * 3));\nint* new_ptr = ptr + 1;\nfree(ptr);\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(void)\n{\nint* ptr = (int*)malloc(sizeof(int));\nfree(ptr);\nint* new_ptr = ptr + 1;\n}\n", "input": "", "output": "1"}, {"instruction": "int * foo(void)\n{\nint* ptr = malloc(sizeof(int));\n*ptr = 10;\nreturn ptr;\n}\n\nvoid test(void)\n{\nint * p = foo();\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "0"}, {"instruction": "int * foo(void)\n{\nint a = 10;\nint* ptr = &a;\nreturn ptr;\n}\n\nvoid test(void)\n{\nint * p = foo();\nif(p != NULL)\nfree(p);\n}\n", "input": "", "output": "1"}, {"instruction": "int * foo(void)\n{\nwhile (true) {\nint* ptr = (int*)malloc(sizeof(int));\nif(ptr != NULL)\nfree(ptr);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "int * foo(void)\n{\nwhile (true) {\nint* ptr = (int*)malloc(sizeof(int));\n}\n}\n", "input": "", "output": "1"}, {"instruction": "typedef struct {\nint* ptr;\n} my_struct;\n\nint * foo(void)\n{\nmy_struct s;\ns.ptr = (int*)malloc(sizeof(int));\nif(s.ptr != NULL)\n{\n*s.ptr = 10;\nfree(s.ptr);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "typedef struct {\nint* ptr;\n} my_struct;\n\nint * foo(void)\n{\nmy_struct s;\n*s.ptr = 10;\n}\n", "input": "", "output": "1"}, {"instruction": "typedef struct {\nint * b;\n} my_struct;\n\n\nint * foo(void)\n{\nmy_struct * a;\na = (my_struct *)malloc(sizeof(my_struct));\nif(a != NULL)\na->b = (int *)malloc(sizeof(int));\n\nfree(a->b);\nfree(a);\n}\n", "input": "", "output": "0"}, {"instruction": "typedef struct {\nint * b;\n} my_struct;\n\n\nint * foo(void)\n{\nmy_struct * a;\na = (my_struct *)malloc(sizeof(my_struct));\nif(a != NULL)\na->b = (int *)malloc(sizeof(int));\n\nfree(a);\n}\n", "input": "", "output": "1"}, {"instruction": "int * foo(void)\n{\nreturn (int *) malloc(10);\n}\n\nvoid test(void)\n{\nint * a = foo();\nif(a != NULL)\nfree(a);\n}\n", "input": "", "output": "0"}, {"instruction": "int * foo(void)\n{\nreturn (int *) malloc(10);\n}\n\nvoid test(void)\n{\nfoo();\n}\n", "input": "", "output": "1"}, {"instruction": "struct student\n{\nchar *name;\nint score;\n}stu;\n\nint * foo(void)\n{\nchar a[16];\nstu.name = a;\n\nstrcpy(stu.name, \"code\");\nstu.score = 99;\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "struct student\n{\nchar *name;\nint score;\n}stu;\n\nint * foo(void)\n{\nstrcpy(stu.name, \"code\");\nstu.score = 99;\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "struct student\n{\nchar *name;\nint score;\n};\n\nint * foo(void)\n{\nstruct student * pstu = (struct student *)malloc(sizeof(struct student));\nchar a[16];\npstu->name = a;\n\nstrcpy(pstu->name, \"code\");\npstu->score = 99;\nfree(pstu);\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "struct student\n{\nchar *name;\nint score;\n};\n\nint * foo(void)\n{\nstruct student * pstu = (struct student *)malloc(sizeof(struct student));\nstrcpy(pstu->name, \"code\");\npstu->score = 99;\nfree(pstu);\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "struct student\n{\nchar *name;\nint score;\n};\n\n\nint * foo(void)\n{\nstruct student * pstu = (struct student *)malloc(sizeof(struct student));\nchar a[16];\npstu->name = a;\n\nstrcpy(pstu->name, \"code\");\npstu->score = 99;\nfree(pstu);\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "struct student\n{\nchar *name;\nint score;\n};\n\nint * foo(void)\n{\nstruct student * pstu = NULL;\npstu = (struct student *)malloc(sizeof(struct student *));\nstrcpy(pstu->name, \"code\");\npstu->score = 99;\nfree(pstu);\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "int * foo(void)\n{\nint a[10] = {0};\nfor (i=0; i<10; i++)\n{\na[i] = i;\n}\n}\n", "input": "", "output": "0"}, {"instruction": "int * foo(void)\n{\nint a[10] = {0};\nfor (i=0; i<=10; i++)\n{\na[i] = i;\n}\n}\n", "input": "", "output": "1"}, {"instruction": "int * foo(void)\n{\nint i;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\nif(p != NULL)\n*p = 1;\nfree(p);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "int * foo(void)\n{\nint i,j;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\n}\n\nfor(j = 0; j < 10; j++)\n{\nfree(p);\n}\n}\n", "input": "", "output": "1"}, {"instruction": "int * foo(void)\n{\nint i;\nint * p[10] = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np[i] = (int *)malloc(sizeof(int));\n}\n\nfor(i = 0; i < 10; i++)\n{\nfree(p[i]);\n}\n}\n", "input": "", "output": "0"}, {"instruction": "int * foo(void)\n{\nint i,j;\nint * p = NULL;\n\nfor(i = 0; i < 10; i++)\n{\np = (int *)malloc(sizeof(int));\n}\n\nfor(i = 0; i < 10; i++)\n{\nfree(p);\n}\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(char *explanation)\n{\nchar *p1;\np1 = (char *)malloc(100);\nsprintf(p1,\"The f1 error occurred because of '%s'.\", explanation);\nfree(p1);\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(char *explanation)\n{\nchar *p1;\np1 = (char *)malloc(100);\nsprintf(p1,\"The f1 error occurred because of '%s'.\", explanation);\nlocal_log(p1);\n}\n", "input": "", "output": "1"}, {"instruction": "int foo(char *filename)\n{\nFILE *fp;\nint key;\nfp = fopen(filename, \"r\");\nfscanf(fp, \"%d\", &key);\nfclose(fp);\nreturn key;\n}\n", "input": "", "output": "0"}, {"instruction": "int foo(char *filename)\n{\nFILE *fp;\nint key;\nfp = fopen(filename, \"r\");\nfscanf(fp, \"%d\", &key);\nreturn key;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo(int datum)\n{\nint *p2;\nint a;\n\np2 = &a;\n*p2 = datum;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo(int datum)\n{\nint *p2;\n*p2 = datum;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo1()\n{\nchar *p, *pp;\np = malloc(10);\npp=p;\nfree(p);\n}\n\nvoid foo2()\n{\nchar *p = NULL;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo1()\n{\nchar *p, *pp;\np = malloc(10);\npp=p;\nfree(p);\nfree(pp);\n}\n\nvoid foo2()\n{\nchar *p;\nfree(p);\n}\n", "input": "", "output": "1"}, {"instruction": "int foo()\n{\nstruct x *xp;\nxp = (struct x *) malloc(sizeof (struct x));\nxp.q = 13;\n\nint a = xp.q;\nfree(xp)\nreturn a;\n}\n", "input": "", "output": "0"}, {"instruction": "int foo()\n{\nstruct x *xp;\nxp = (struct x *) malloc(sizeof (struct x));\nxp.q = 13;\nfree(xp);\nreturn xp.q;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo2 (int * a)\n{\nfree(a);\n}\n\nvoid foo1 (int * a)\n{\nfoo2(a);\n}\n\nvoid foo()\n{\nint * a;\na = (int *) malloc(sizeof (int));\nfoo1(a);\n}\n", "input": "", "output": "0"}, {"instruction": "void foo2 (int * a)\n{\nint * b;\nfree(b);\n}\n\nvoid foo1 (int * a)\n{\nint * b;\nb = a;\nfoo2(b);\n}\n\nvoid foo()\n{\nint * a;\na = (int *) malloc(sizeof (int));\nfoo1(a);\n}\n", "input": "", "output": "1"}, {"instruction": "void foo()\n{\nint * a;\nint b;\na = &b;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo()\n{\nint * a;\nint b;\na = b;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo()\n{\nint * a;\nint c[10];\na = c;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo()\n{\nint * a;\nint c;\na = c;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo()\n{\nint ** a;\nint c[10];\na = &c;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo()\n{\nint * a;\nint c[10];\na = &c;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo()\n{\nint * a;\nint c[10];\n\na = c;\na + 5 = 10;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo()\n{\nint * a;\nint c[10];\n\na = c;\na + 11 = 10;\n}\n", "input": "", "output": "1"}, {"instruction": "void foo()\n{\nint c[10];\nc[9] = 10;\n}\n", "input": "", "output": "0"}, {"instruction": "void foo()\n{\nint c[10];\nc[10] = 10;\n}\n", "input": "", "output": "1"}, {"instruction": "int * a = NULL;\nvoid foo()\n{\na = (int *)malloc(sizeof(int));\nif(a != NULL)\nfree(a);\na = NULL;\n}\n", "input": "", "output": "0"}, {"instruction": "int * a = NULL;\nvoid foo()\n{\na = (int *)malloc(sizeof(int));\nif(a != NULL)\nfree(a);\n}\n", "input": "", "output": "1"}, {"instruction": "void foo1()\n{\n*a += 1;\n}\n\nvoid foo2(int * a)\n{\n*a = 10;\nfoo1(a);\n}\n\nvoid foo3(int * a)\n{\nint * a = (int *)malloc(sizeof(int));\nif(a != NULL)\nfoo2(a);\nfree(a);\n}\n", "input": "", "output": "0"}, {"instruction": "void foo1()\n{\n*a += 1;\n}\n\nvoid foo2(int * a)\n{\n*a = 10;\nfoo1(a);\n}\n\nvoid foo3(int * a)\n{\nint * a = (int *)malloc(sizeof(int));\nif (a != NULL)\nfoo2(a);\n}\n", "input": "", "output": "1"}]