[{"instruction": "struct testCode {\nchar i;\nint a;\nint * b;\nint * c[10];\n};\n\nvoid foo(void)\n{\nint j;\nstruct testCode * testST;\n\ntestST = (struct testCode *)malloc(sizeof(struct testCode));\n\nif(testST == NULL)\nreturn;\n\ntestST->a = 1;\n\ntestST->b = (int *)malloc(sizeof(int));\n\nfor(j = 0; j < 10; j++)\n{\ntestST->c[j] = (int *)malloc(sizeof(int));\n}\n\nif(testST->b != NULL)\nfree(testST->b);\n\nfor(j = 0; j < 10; j++)\n{\nfree(testST->c[j]);\n}\n\nfree(testST);\n}\n\nint main(void)\n{\nfoo();\n\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "struct testCode {\nchar i;\nint a;\nint * b;\nint * c[10];\n};\n\nvoid foo(void)\n{\nint j;\nstruct testCode * testST;\nint * testVal;\n\ntestST = (struct testCode *)malloc(sizeof(struct testCode));\n\ntestST->c[4] = (int *)malloc(sizeof(int));\ntestST->c[9] = (int *)malloc(sizeof(int));\ntestST->c[13] = (int *)malloc(sizeof(int));\n\ntestVal = (int *)malloc(sizeof(int));\n\nfor(j = 0; j < 10; j++)\n{\nif(testST->c[j] != NULL)\nfree(testST->c[j]);\n}\n\nfree(testVal);\nfree(testST);\n}\n\nint main(void)\n{\nfoo();\n\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "struct testCode {\nchar i;\nint a;\nint * b;\nint * c[10];\n};\n\nvoid foo(void)\n{\nint j;\nstruct testCode * testST;\n\ntestST = (struct testCode *)malloc(sizeof(struct testCode));\n\nif(testST == NULL)\nreturn;\n\ntestST->a = 1;\n\ntestST->b = (int *)malloc(sizeof(int));\n\nfor(j = 0; j < 10; j++)\n{\ntestST->c[j] = (int *)malloc(sizeof(int));\n}\n\nif(testST->b != NULL)\nfree(testST->b);\n\nfor(j = 0; j < 10; j++)\n{\nfree(testST->c[j]);\n}\n\nfree(testST);\n}\n\nint main(void)\n{\nfoo();\n\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "struct testCode {\nchar i;\nint a;\nint * b;\nint * c[10];\n};\n\nvoid foo(void)\n{\nint j;\nstruct testCode * testST;\nint * testVal;\n\ntestST = (struct testCode *)malloc(sizeof(struct testCode));\n\ntestST->c[4] = (int *)malloc(sizeof(int));\ntestST->c[9] = (int *)malloc(sizeof(int));\n\ntestVal = (int *)malloc(sizeof(int));\n\nfor(j = 0; j < 5; j++)\n{\nif(testST->c[j] != NULL)\nfree(testST->c[j]);\n}\n\nfree(testVal);\nfree(testST);\n}\n\nint main(void)\n{\nfoo();\n\nreturn 0;\n}\n", "input": "", "output": "1"},{"instruction": "struct testCode {\nchar i;\nint a;\nint * b;\nint * c[10];\n};\n\nvoid foo(void)\n{\nint j;\nstruct testCode * testST;\n\ntestST = (struct testCode *)malloc(sizeof(struct testCode));\n\nif(testST == NULL)\nreturn;\n\ntestST->a = 1;\n\ntestST->b = (int *)malloc(sizeof(int));\n\nfor(j = 0; j < 10; j++)\n{\ntestST->c[j] = (int *)malloc(sizeof(int));\n}\n\nif(testST->b != NULL)\nfree(testST->b);\n\nfor(j = 0; j < 10; j++)\n{\nfree(testST->c[j]);\n}\n\nfree(testST);\n}\n\nint main(void)\n{\nfoo();\n\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "struct testCode {\nchar i;\nint a;\nint * b;\nint * c[10];\n};\n\nvoid foo(void)\n{\nint j;\nstruct testCode * testST;\nint * testVal;\n\ntestST = (struct testCode *)malloc(sizeof(struct testCode));\n\ntestST->c[4] = (int *)malloc(sizeof(int));\ntestST->c[9] = (int *)malloc(sizeof(int));\n\ntestVal = (int *)malloc(sizeof(int));\n\nfor(j = 0; j < 10; j++)\n{\nfree(testST->c[j]);\n}\n\nfree(testVal);\nfree(testST);\n}\n\nint main(void)\n{\nfoo();\n\nreturn 0;\n}\n", "input": "", "output": "1"}]