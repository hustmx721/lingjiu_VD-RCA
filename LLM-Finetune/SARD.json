[{"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic char * normG2BSource(char * data)\n{\ndata = (char *)ALLOCA(100*sizeof(char));\nstrcpy(data, \"A String\");\nprintLine(data);\nreturn data;\n}\nstatic char * normB2GSource(char * data)\n{\ndata = (char *)calloc(100, sizeof(char));\nif (data == NULL) {exit(-1);}\nstrcpy(data, \"A String\");\nprintLine(data);\nreturn data;\n}\nstatic void normB2G()\n{\nchar * data;\ndata = NULL;\ndata = normB2GSource(data);\nfree(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic char * normSource(char * data)\n{\ndata = (char *)calloc(100, sizeof(char));\nif (data == NULL) {exit(-1);}\nstrcpy(data, \"A String\");\nprintLine(data);\nreturn data;\n}\nvoid FUNC_char_calloc_42_norm()\n{\nchar * data;\ndata = NULL;\ndata = normSource(data);\n\n;\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_char_calloc_42_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_FIVE = 5;\nstatic void normB2G1()\n{\nchar * data;\ndata = NULL;\nif(STATIC_CONST_FIVE==5)\n{\ndata = (char *)malloc(100*sizeof(char));\nif (data == NULL) {exit(-1);}\nstrcpy(data, \"A String\");\nprintLine(data);\n}\nif(STATIC_CONST_FIVE!=5)\n{\n}\nelse\n{\nfree(data);\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_FIVE = 5;\nvoid FUNC_char_malloc_06_norm()\n{\nchar * data;\ndata = NULL;\nif(STATIC_CONST_FIVE==5)\n{\ndata = (char *)malloc(100*sizeof(char));\nif (data == NULL) {exit(-1);}\nstrcpy(data, \"A String\");\nprintLine(data);\n}\nif(STATIC_CONST_FIVE==5)\n{\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_char_malloc_06_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normB2G()\n{\nint * data;\ndata = NULL;\ngoto source;\nsource:\ndata = (int *)calloc(100, sizeof(int));\nif (data == NULL) {exit(-1);}\ndata[0] = 5;\nprintIntLine(data[0]);\ngoto sink;\nsink:\nfree(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_int_calloc_18_norm()\n{\nint * data;\ndata = NULL;\ngoto source;\nsource:\ndata = (int *)calloc(100, sizeof(int));\nif (data == NULL) {exit(-1);}\ndata[0] = 5;\nprintIntLine(data[0]);\ngoto sink;\nsink:\n\n;\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_int_calloc_18_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_FIVE = 5;\nstatic void normB2G1()\n{\nint * data;\ndata = NULL;\nif(STATIC_CONST_FIVE==5)\n{\ndata = (int *)malloc(100*sizeof(int));\nif (data == NULL) {exit(-1);}\ndata[0] = 5;\nprintIntLine(data[0]);\n}\nif(STATIC_CONST_FIVE!=5)\n{\n}\nelse\n{\nfree(data);\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_FIVE = 5;\nvoid FUNC_int_malloc_06_norm()\n{\nint * data;\ndata = NULL;\nif(STATIC_CONST_FIVE==5)\n{\ndata = (int *)malloc(100*sizeof(int));\nif (data == NULL) {exit(-1);}\ndata[0] = 5;\nprintIntLine(data[0]);\n}\nif(STATIC_CONST_FIVE==5)\n{\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_int_malloc_06_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normB2G1()\n{\nint64_t * data;\ndata = NULL;\nif(1)\n{\ndata = (int64_t *)calloc(100, sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\n}\nif(0)\n{\n}\nelse\n{\nfree(data);\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_int64_t_calloc_02_norm()\n{\nint64_t * data;\ndata = NULL;\nif(1)\n{\ndata = (int64_t *)calloc(100, sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\n}\nif(1)\n{\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_int64_t_calloc_02_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normG2BSink(int64_t * data)\n{\n;\n}\nstatic void normG2B()\n{\nint64_t * data;\nvoid (*funcPtr) (int64_t *) = normG2BSink;\ndata = NULL;\ndata = (int64_t *)ALLOCA(100*sizeof(int64_t));\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\nfuncPtr(data);\n}\nstatic void normB2GSink(int64_t * data)\n{\nfree(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normSink(int64_t * data)\n{\n\n;\n}\nvoid FUNC_int64_t_calloc_44_norm()\n{\nint64_t * data;\nvoid (*funcPtr) (int64_t *) = normSink;\ndata = NULL;\ndata = (int64_t *)calloc(100, sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\nfuncPtr(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_int64_t_calloc_44_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normB2G()\n{\nint i,k;\nint64_t * data;\ndata = NULL;\nfor(i = 0; i < 1; i++)\n{\ndata = (int64_t *)malloc(100*sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\n}\nfor(k = 0; k < 1; k++)\n{\nfree(data);\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_int64_t_malloc_17_norm()\n{\nint i,j;\nint64_t * data;\ndata = NULL;\nfor(i = 0; i < 1; i++)\n{\ndata = (int64_t *)malloc(100*sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\n}\nfor(j = 0; j < 1; j++)\n{\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_int64_t_malloc_17_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normB2G1()\n{\nint64_t * data;\ndata = NULL;\nif(5==5)\n{\ndata = (int64_t *)realloc(data, 100*sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\n}\nif(5!=5)\n{\n}\nelse\n{\nfree(data);\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_int64_t_realloc_03_norm()\n{\nint64_t * data;\ndata = NULL;\nif(5==5)\n{\ndata = (int64_t *)realloc(data, 100*sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\n}\nif(5==5)\n{\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_int64_t_realloc_03_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\ntypedef union\n{\nint64_t * unionFirst;\nint64_t * unionSecond;\n} CWE401_Memory_Leak__int64_t_realloc_34_unionType;\nstatic void normG2B()\n{\nint64_t * data;\nCWE401_Memory_Leak__int64_t_realloc_34_unionType myUnion;\ndata = NULL;\ndata = (int64_t *)ALLOCA(100*sizeof(int64_t));\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\nmyUnion.unionFirst = data;\n{\nint64_t * data = myUnion.unionSecond;\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\ntypedef union\n{\nint64_t * unionFirst;\nint64_t * unionSecond;\n} FUNC_int64_t_realloc_34_unionType;\nvoid FUNC_int64_t_realloc_34_norm()\n{\nint64_t * data;\nFUNC_int64_t_realloc_34_unionType myUnion;\ndata = NULL;\ndata = (int64_t *)realloc(data, 100*sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\nmyUnion.unionFirst = data;\n{\nint64_t * data = myUnion.unionSecond;\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_int64_t_realloc_34_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normG2BSink(int64_t * data)\n{\n;\n}\nstatic void normB2GSink(int64_t * data)\n{\nfree(data);\n}\nstatic void normB2G()\n{\nint64_t * data;\ndata = NULL;\ndata = (int64_t *)realloc(data, 100*sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\nnormB2GSink(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normSink(int64_t * data)\n{\n\n;\n}\nvoid FUNC_int64_t_realloc_41_norm()\n{\nint64_t * data;\ndata = NULL;\ndata = (int64_t *)realloc(data, 100*sizeof(int64_t));\nif (data == NULL) {exit(-1);}\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\nnormSink(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_int64_t_realloc_41_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void norm1()\n{\nswitch(5)\n{\ncase 6:\nbreak;\ndefault:\n{\nchar * data = (char *)malloc(100*sizeof(char));\nif (data == NULL) {exit(-1);}\nchar * tmpData;\nstrcpy(data, \"A String\");\nprintLine(data);\ntmpData = (char *)realloc(data, (130000)*sizeof(char));\nif (tmpData != NULL)\n{\ndata = tmpData;\nstrcpy(data, \"New String\");\nprintLine(data);\n}\nfree(data);\n}\nbreak;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_malloc_realloc_char_15_norm()\n{\nswitch(6)\n{\ncase 6:\n{\nchar * data = (char *)malloc(100*sizeof(char));\nif (data == NULL) {exit(-1);}\nstrcpy(data, \"A String\");\nprintLine(data);\ndata = (char *)realloc(data, (130000)*sizeof(char));\nif (data != NULL)\n{\nstrcpy(data, \"New String\");\nprintLine(data);\nfree(data);\n}\n}\nbreak;\ndefault:\nbreak;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_malloc_realloc_char_15_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void norm1()\n{\n{\nint * data = (int *)malloc(100*sizeof(int));\nif (data == NULL) {exit(-1);}\nint * tmpData;\ndata[0] = 5;\nprintIntLine(data[0]);\ntmpData = (int *)realloc(data, (130000)*sizeof(int));\nif (tmpData != NULL)\n{\ndata = tmpData;\ndata[0] = 10;\nprintIntLine(data[0]);\n}\nfree(data);\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_malloc_realloc_int_01_norm()\n{\n{\nint * data = (int *)malloc(100*sizeof(int));\nif (data == NULL) {exit(-1);}\ndata[0] = 5;\nprintIntLine(data[0]);\ndata = (int *)realloc(data, (130000)*sizeof(int));\nif (data != NULL)\n{\ndata[0] = 10;\nprintIntLine(data[0]);\nfree(data);\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_malloc_realloc_int_01_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticReturnsTrue()\n{\nreturn 1;\n}\nstatic int staticReturnsFalse()\n{\nreturn 0;\n}\nstatic void norm1()\n{\nif(staticReturnsFalse())\n{\n}\nelse\n{\n{\nint * data = (int *)malloc(100*sizeof(int));\nif (data == NULL) {exit(-1);}\nint * tmpData;\ndata[0] = 5;\nprintIntLine(data[0]);\ntmpData = (int *)realloc(data, (130000)*sizeof(int));\nif (tmpData != NULL)\n{\ndata = tmpData;\ndata[0] = 10;\nprintIntLine(data[0]);\n}\nfree(data);\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticReturnsTrue()\n{\nreturn 1;\n}\nstatic int staticReturnsFalse()\n{\nreturn 0;\n}\nvoid FUNC_malloc_realloc_int_08_norm()\n{\nif(staticReturnsTrue())\n{\n{\nint * data = (int *)malloc(100*sizeof(int));\nif (data == NULL) {exit(-1);}\ndata[0] = 5;\nprintIntLine(data[0]);\ndata = (int *)realloc(data, (130000)*sizeof(int));\nif (data != NULL)\n{\ndata[0] = 10;\nprintIntLine(data[0]);\nfree(data);\n}\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_malloc_realloc_int_08_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void norm1()\n{\n{\nstruct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));\nif (data == NULL) {exit(-1);}\nstruct _twoIntsStruct * tmpData;\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\ntmpData = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));\nif (tmpData != NULL)\n{\ndata = tmpData;\ndata[0].intOne = 1;\ndata[0].intTwo = 1;\nprintStructLine((twoIntsStruct *)&data[0]);\n}\nfree(data);\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_malloc_realloc_struct_twoIntsStruct_01_norm()\n{\n{\nstruct _twoIntsStruct * data = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\ndata = (struct _twoIntsStruct *)realloc(data, (130000)*sizeof(struct _twoIntsStruct));\nif (data != NULL)\n{\ndata[0].intOne = 1;\ndata[0].intTwo = 1;\nprintStructLine((twoIntsStruct *)&data[0]);\nfree(data);\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_malloc_realloc_struct_twoIntsStruct_01_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_FIVE = 5;\nstatic void norm1()\n{\nif(STATIC_CONST_FIVE!=5)\n{\n}\nelse\n{\n{\ntwoIntsStruct * data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ntwoIntsStruct * tmpData;\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\ntmpData = (twoIntsStruct *)realloc(data, (130000)*sizeof(twoIntsStruct));\nif (tmpData != NULL)\n{\ndata = tmpData;\ndata[0].intOne = 1;\ndata[0].intTwo = 1;\nprintStructLine(&data[0]);\n}\nfree(data);\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_FIVE = 5;\nvoid FUNC_malloc_realloc_twoIntsStruct_06_norm()\n{\nif(STATIC_CONST_FIVE==5)\n{\n{\ntwoIntsStruct * data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\ndata = (twoIntsStruct *)realloc(data, (130000)*sizeof(twoIntsStruct));\nif (data != NULL)\n{\ndata[0].intOne = 1;\ndata[0].intTwo = 1;\nprintStructLine(&data[0]);\nfree(data);\n}\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_malloc_realloc_twoIntsStruct_06_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void norm1()\n{\nint k;\nfor(k = 0; k < 1; k++)\n{\n{\ntwoIntsStruct * data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ntwoIntsStruct * tmpData;\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\ntmpData = (twoIntsStruct *)realloc(data, (130000)*sizeof(twoIntsStruct));\nif (tmpData != NULL)\n{\ndata = tmpData;\ndata[0].intOne = 1;\ndata[0].intTwo = 1;\nprintStructLine(&data[0]);\n}\nfree(data);\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_malloc_realloc_twoIntsStruct_17_norm()\n{\nint j;\nfor(j = 0; j < 1; j++)\n{\n{\ntwoIntsStruct * data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\ndata = (twoIntsStruct *)realloc(data, (130000)*sizeof(twoIntsStruct));\nif (data != NULL)\n{\ndata[0].intOne = 1;\ndata[0].intTwo = 1;\nprintStructLine(&data[0]);\nfree(data);\n}\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_malloc_realloc_twoIntsStruct_17_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticFive = 5;\nstatic void norm1()\n{\nif(staticFive!=5)\n{\n}\nelse\n{\n{\nwchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));\nif (data == NULL) {exit(-1);}\nwchar_t * tmpData;\nwcscpy(data, L\"A String\");\nprintWLine(data);\ntmpData = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));\nif (tmpData != NULL)\n{\ndata = tmpData;\nwcscpy(data, L\"New String\");\nprintWLine(data);\n}\nfree(data);\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticFive = 5;\nvoid FUNC_malloc_realloc_wchar_t_07_norm()\n{\nif(staticFive==5)\n{\n{\nwchar_t * data = (wchar_t *)malloc(100*sizeof(wchar_t));\nif (data == NULL) {exit(-1);}\nwcscpy(data, L\"A String\");\nprintWLine(data);\ndata = (wchar_t *)realloc(data, (130000)*sizeof(wchar_t));\nif (data != NULL)\n{\nwcscpy(data, L\"New String\");\nprintWLine(data);\nfree(data);\n}\n}\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_malloc_realloc_wchar_t_07_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_array_char_02\n{\nstatic void normB2G1()\n{\nchar * data;\ndata = NULL;\nif(1)\n{\ndata = new char[100];\nstrcpy(data, \"A String\");\nprintLine(data);\n}\nif(0)\n{\n}\nelse\n{\ndelete[] data;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_array_char_02;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_array_char_02\n{\nvoid norm()\n{\nchar * data;\ndata = NULL;\nif(1)\n{\ndata = new char[100];\nstrcpy(data, \"A String\");\nprintLine(data);\n}\nif(1)\n{\n\n;\n}\n}\n}\nusing namespace FUNC_new_array_char_02;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_array_char_34\n{\ntypedef union\n{\nchar * unionFirst;\nchar * unionSecond;\n} unionType;\nstatic void normG2B()\n{\nchar * data;\nunionType myUnion;\ndata = NULL;\nchar datanormBuffer[100];\ndata = datanormBuffer;\nstrcpy(data, \"A String\");\nprintLine(data);\nmyUnion.unionFirst = data;\n{\nchar * data = myUnion.unionSecond;\n;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_array_char_34;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_array_char_34\n{\ntypedef union\n{\nchar * unionFirst;\nchar * unionSecond;\n} unionType;\nvoid norm()\n{\nchar * data;\nunionType myUnion;\ndata = NULL;\ndata = new char[100];\nstrcpy(data, \"A String\");\nprintLine(data);\nmyUnion.unionFirst = data;\n{\nchar * data = myUnion.unionSecond;\n\n;\n}\n}\n}\nusing namespace FUNC_new_array_char_34;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_array_int64_t_34\n{\ntypedef union\n{\nint64_t * unionFirst;\nint64_t * unionSecond;\n} unionType;\nstatic void normG2B()\n{\nint64_t * data;\nunionType myUnion;\ndata = NULL;\nint64_t datanormBuffer[100];\ndata = datanormBuffer;\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\nmyUnion.unionFirst = data;\n{\nint64_t * data = myUnion.unionSecond;\n;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_array_int64_t_34;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_array_int64_t_34\n{\ntypedef union\n{\nint64_t * unionFirst;\nint64_t * unionSecond;\n} unionType;\nvoid norm()\n{\nint64_t * data;\nunionType myUnion;\ndata = NULL;\ndata = new int64_t[100];\ndata[0] = 5LL;\nprintLongLongLine(data[0]);\nmyUnion.unionFirst = data;\n{\nint64_t * data = myUnion.unionSecond;\n\n;\n}\n}\n}\nusing namespace FUNC_new_array_int64_t_34;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_array_TwoIntsClass_16\n{\nstatic void normB2G()\n{\nTwoIntsClass * data;\ndata = NULL;\nwhile(1)\n{\ndata = new TwoIntsClass[100];\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintIntLine(data[0].intOne);\nprintIntLine(data[0].intTwo);\nbreak;\n}\nwhile(1)\n{\ndelete[] data;\nbreak;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_array_TwoIntsClass_16;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_array_TwoIntsClass_16\n{\nvoid norm()\n{\nTwoIntsClass * data;\ndata = NULL;\nwhile(1)\n{\ndata = new TwoIntsClass[100];\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintIntLine(data[0].intOne);\nprintIntLine(data[0].intTwo);\nbreak;\n}\nwhile(1)\n{\n\n;\nbreak;\n}\n}\n}\nusing namespace FUNC_new_array_TwoIntsClass_16;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_array_twointsStruct_31\n{\nstatic void normG2B()\n{\ntwoIntsStruct * data;\ndata = NULL;\ntwoIntsStruct datanormBuffer[100];\ndata = datanormBuffer;\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\n{\ntwoIntsStruct * dataCopy = data;\ntwoIntsStruct * data = dataCopy;\n;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_array_twointsStruct_31;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_array_twointsStruct_31\n{\nvoid norm()\n{\ntwoIntsStruct * data;\ndata = NULL;\ndata = new twoIntsStruct[100];\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\n{\ntwoIntsStruct * dataCopy = data;\ntwoIntsStruct * data = dataCopy;\n\n;\n}\n}\n}\nusing namespace FUNC_new_array_twointsStruct_31;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_TRUE = 1;\nstatic const int STATIC_CONST_FALSE = 0;\nnamespace CWE401_Memory_Leak__new_array_wchar_t_04\n{\nstatic void normB2G1()\n{\nwchar_t * data;\ndata = NULL;\nif(STATIC_CONST_TRUE)\n{\ndata = new wchar_t[100];\nwcscpy(data, L\"A String\");\nprintWLine(data);\n}\nif(STATIC_CONST_FALSE)\n{\n}\nelse\n{\ndelete[] data;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_array_wchar_t_04;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_TRUE = 1;\nstatic const int STATIC_CONST_FALSE = 0;\nnamespace FUNC_new_array_wchar_t_04\n{\nvoid norm()\n{\nwchar_t * data;\ndata = NULL;\nif(STATIC_CONST_TRUE)\n{\ndata = new wchar_t[100];\nwcscpy(data, L\"A String\");\nprintWLine(data);\n}\nif(STATIC_CONST_TRUE)\n{\n\n;\n}\n}\n}\nusing namespace FUNC_new_array_wchar_t_04;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_array_wchar_t_34\n{\ntypedef union\n{\nwchar_t * unionFirst;\nwchar_t * unionSecond;\n} unionType;\nstatic void normG2B()\n{\nwchar_t * data;\nunionType myUnion;\ndata = NULL;\nwchar_t datanormBuffer[100];\ndata = datanormBuffer;\nwcscpy(data, L\"A String\");\nprintWLine(data);\nmyUnion.unionFirst = data;\n{\nwchar_t * data = myUnion.unionSecond;\n;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_array_wchar_t_34;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_array_wchar_t_34\n{\ntypedef union\n{\nwchar_t * unionFirst;\nwchar_t * unionSecond;\n} unionType;\nvoid norm()\n{\nwchar_t * data;\nunionType myUnion;\ndata = NULL;\ndata = new wchar_t[100];\nwcscpy(data, L\"A String\");\nprintWLine(data);\nmyUnion.unionFirst = data;\n{\nwchar_t * data = myUnion.unionSecond;\n\n;\n}\n}\n}\nusing namespace FUNC_new_array_wchar_t_34;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_char_32\n{\nstatic void normG2B()\n{\nchar * data;\nchar * *dataPtr1 = &data;\nchar * *dataPtr2 = &data;\ndata = NULL;\n{\nchar * data = *dataPtr1;\nchar datanormBuffer;\ndata = &datanormBuffer;\n*data = 'A';\nprintHexCharLine(*data);\n*dataPtr1 = data;\n}\n{\nchar * data = *dataPtr2;\n;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_char_32;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_char_32\n{\nvoid norm()\n{\nchar * data;\nchar * *dataPtr1 = &data;\nchar * *dataPtr2 = &data;\ndata = NULL;\n{\nchar * data = *dataPtr1;\ndata = new char;\n*data = 'A';\nprintHexCharLine(*data);\n*dataPtr1 = data;\n}\n{\nchar * data = *dataPtr2;\n\n;\n}\n}\n}\nusing namespace FUNC_new_char_32;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_char_44\n{\nstatic void normG2BSink(char * data)\n{\n;\n}\nstatic void normG2B()\n{\nchar * data;\nvoid (*funcPtr) (char *) = normG2BSink;\ndata = NULL;\nchar datanormBuffer;\ndata = &datanormBuffer;\n*data = 'A';\nprintHexCharLine(*data);\nfuncPtr(data);\n}\nstatic void normB2GSink(char * data)\n{\ndelete data;\n}\n}\nusing namespace CWE401_Memory_Leak__new_char_44;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_char_44\n{\nstatic void normSink(char * data)\n{\n\n;\n}\nvoid norm()\n{\nchar * data;\nvoid (*funcPtr) (char *) = normSink;\ndata = NULL;\ndata = new char;\n*data = 'A';\nprintHexCharLine(*data);\nfuncPtr(data);\n}\n}\nusing namespace FUNC_new_char_44;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_FIVE = 5;\nnamespace CWE401_Memory_Leak__new_int_06\n{\nstatic void normB2G1()\n{\nint * data;\ndata = NULL;\nif(STATIC_CONST_FIVE==5)\n{\ndata = new int;\n*data = 5;\nprintIntLine(*data);\n}\nif(STATIC_CONST_FIVE!=5)\n{\n}\nelse\n{\ndelete data;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_int_06;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic const int STATIC_CONST_FIVE = 5;\nnamespace FUNC_new_int_06\n{\nvoid norm()\n{\nint * data;\ndata = NULL;\nif(STATIC_CONST_FIVE==5)\n{\ndata = new int;\n*data = 5;\nprintIntLine(*data);\n}\nif(STATIC_CONST_FIVE==5)\n{\n\n;\n}\n}\n}\nusing namespace FUNC_new_int_06;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_int_10\n{\nstatic void normB2G1()\n{\nint * data;\ndata = NULL;\nif(globalTrue)\n{\ndata = new int;\n*data = 5;\nprintIntLine(*data);\n}\nif(globalFalse)\n{\n}\nelse\n{\ndelete data;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_int_10;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_int_10\n{\nvoid norm()\n{\nint * data;\ndata = NULL;\nif(globalTrue)\n{\ndata = new int;\n*data = 5;\nprintIntLine(*data);\n}\nif(globalTrue)\n{\n\n;\n}\n}\n}\nusing namespace FUNC_new_int_10;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_int64_t_21\n{\nstatic int normB2G1Static = 0;\nstatic int normB2G2Static = 0;\nstatic int normG2bStatic = 0;\nstatic void normB2G1Sink(int64_t * data)\n{\nif(normB2G1Static)\n{\n}\nelse\n{\ndelete data;\n}\n}\nstatic void normB2G1()\n{\nint64_t * data;\ndata = NULL;\ndata = new int64_t;\n*data = 5LL;\nprintLongLongLine(*data);\nnormB2G1Static = 0;\nnormB2G1Sink(data);\n}\nstatic void normB2G2Sink(int64_t * data)\n{\nif(normB2G2Static)\n{\ndelete data;\n}\n}\nstatic void normG2BSink(int64_t * data)\n{\nif(normG2bStatic)\n{\n;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_int64_t_21;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_int64_t_21\n{\nstatic int normStatic = 0;\nstatic void normSink(int64_t * data)\n{\nif(normStatic)\n{\n\n;\n}\n}\nvoid norm()\n{\nint64_t * data;\ndata = NULL;\ndata = new int64_t;\n*data = 5LL;\nprintLongLongLine(*data);\nnormStatic = 1;\nnormSink(data);\n}\n}\nusing namespace FUNC_new_int64_t_21;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\nnamespace CWE401_Memory_Leak__new_struct_twoIntsStruct_05\n{\nstatic void normB2G1()\n{\nstruct _twoIntsStruct * data;\ndata = NULL;\nif(staticTrue)\n{\ndata = new struct _twoIntsStruct;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintStructLine((twoIntsStruct *)data);\n}\nif(staticFalse)\n{\n}\nelse\n{\ndelete data;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_struct_twoIntsStruct_05;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\nnamespace FUNC_new_struct_twoIntsStruct_05\n{\nvoid norm()\n{\nstruct _twoIntsStruct * data;\ndata = NULL;\nif(staticTrue)\n{\ndata = new struct _twoIntsStruct;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintStructLine((twoIntsStruct *)data);\n}\nif(staticTrue)\n{\n\n;\n}\n}\n}\nusing namespace FUNC_new_struct_twoIntsStruct_05;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_struct_twoIntsStruct_44\n{\nstatic void normG2BSink(struct _twoIntsStruct * data)\n{\n;\n}\nstatic void normG2B()\n{\nstruct _twoIntsStruct * data;\nvoid (*funcPtr) (struct _twoIntsStruct *) = normG2BSink;\ndata = NULL;\nstruct _twoIntsStruct datanormBuffer;\ndata = &datanormBuffer;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintStructLine((twoIntsStruct *)data);\nfuncPtr(data);\n}\nstatic void normB2GSink(struct _twoIntsStruct * data)\n{\ndelete data;\n}\n}\nusing namespace CWE401_Memory_Leak__new_struct_twoIntsStruct_44;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_struct_twoIntsStruct_44\n{\nstatic void normSink(struct _twoIntsStruct * data)\n{\n\n;\n}\nvoid norm()\n{\nstruct _twoIntsStruct * data;\nvoid (*funcPtr) (struct _twoIntsStruct *) = normSink;\ndata = NULL;\ndata = new struct _twoIntsStruct;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintStructLine((twoIntsStruct *)data);\nfuncPtr(data);\n}\n}\nusing namespace FUNC_new_struct_twoIntsStruct_44;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_TwoIntsClass_01\n{\nstatic void normG2B()\n{\nTwoIntsClass * data;\ndata = NULL;\nTwoIntsClass datanormBuffer;\ndata = &datanormBuffer;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintIntLine(data->intOne);\nprintIntLine(data->intTwo);\n;\n}\n}\nusing namespace CWE401_Memory_Leak__new_TwoIntsClass_01;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_TwoIntsClass_01\n{\nvoid norm()\n{\nTwoIntsClass * data;\ndata = NULL;\ndata = new TwoIntsClass;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintIntLine(data->intOne);\nprintIntLine(data->intTwo);\n\n;\n}\n}\nusing namespace FUNC_new_TwoIntsClass_01;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\nnamespace CWE401_Memory_Leak__new_TwoIntsClass_05\n{\nstatic void normB2G1()\n{\nTwoIntsClass * data;\ndata = NULL;\nif(staticTrue)\n{\ndata = new TwoIntsClass;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintIntLine(data->intOne);\nprintIntLine(data->intTwo);\n}\nif(staticFalse)\n{\n}\nelse\n{\ndelete data;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_TwoIntsClass_05;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\nnamespace FUNC_new_TwoIntsClass_05\n{\nvoid norm()\n{\nTwoIntsClass * data;\ndata = NULL;\nif(staticTrue)\n{\ndata = new TwoIntsClass;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintIntLine(data->intOne);\nprintIntLine(data->intTwo);\n}\nif(staticTrue)\n{\n\n;\n}\n}\n}\nusing namespace FUNC_new_TwoIntsClass_05;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_twoIntsStruct_14\n{\nstatic void normB2G1()\n{\ntwoIntsStruct * data;\ndata = NULL;\nif(globalFive==5)\n{\ndata = new twoIntsStruct;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintStructLine(data);\n}\nif(globalFive!=5)\n{\n}\nelse\n{\ndelete data;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_twoIntsStruct_14;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_twoIntsStruct_14\n{\nvoid norm()\n{\ntwoIntsStruct * data;\ndata = NULL;\nif(globalFive==5)\n{\ndata = new twoIntsStruct;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintStructLine(data);\n}\nif(globalFive==5)\n{\n\n;\n}\n}\n}\nusing namespace FUNC_new_twoIntsStruct_14;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_twoIntsStruct_31\n{\nstatic void normG2B()\n{\ntwoIntsStruct * data;\ndata = NULL;\ntwoIntsStruct datanormBuffer;\ndata = &datanormBuffer;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintStructLine(data);\n{\ntwoIntsStruct * dataCopy = data;\ntwoIntsStruct * data = dataCopy;\n;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_twoIntsStruct_31;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_twoIntsStruct_31\n{\nvoid norm()\n{\ntwoIntsStruct * data;\ndata = NULL;\ndata = new twoIntsStruct;\ndata->intOne = 0;\ndata->intTwo = 0;\nprintStructLine(data);\n{\ntwoIntsStruct * dataCopy = data;\ntwoIntsStruct * data = dataCopy;\n\n;\n}\n}\n}\nusing namespace FUNC_new_twoIntsStruct_31;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticReturnsTrue()\n{\nreturn 1;\n}\nstatic int staticReturnsFalse()\n{\nreturn 0;\n}\nnamespace CWE401_Memory_Leak__new_wchar_t_08\n{\nstatic void normB2G1()\n{\nwchar_t * data;\ndata = NULL;\nif(staticReturnsTrue())\n{\ndata = new wchar_t;\n*data = L'A';\nprintHexCharLine((char)*data);\n}\nif(staticReturnsFalse())\n{\n}\nelse\n{\ndelete data;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_wchar_t_08;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticReturnsTrue()\n{\nreturn 1;\n}\nstatic int staticReturnsFalse()\n{\nreturn 0;\n}\nnamespace FUNC_new_wchar_t_08\n{\nvoid norm()\n{\nwchar_t * data;\ndata = NULL;\nif(staticReturnsTrue())\n{\ndata = new wchar_t;\n*data = L'A';\nprintHexCharLine((char)*data);\n}\nif(staticReturnsTrue())\n{\n\n;\n}\n}\n}\nusing namespace FUNC_new_wchar_t_08;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_wchar_t_09\n{\nstatic void normB2G1()\n{\nwchar_t * data;\ndata = NULL;\nif(GLOBAL_CONST_TRUE)\n{\ndata = new wchar_t;\n*data = L'A';\nprintHexCharLine((char)*data);\n}\nif(GLOBAL_CONST_FALSE)\n{\n}\nelse\n{\ndelete data;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__new_wchar_t_09;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_wchar_t_09\n{\nvoid norm()\n{\nwchar_t * data;\ndata = NULL;\nif(GLOBAL_CONST_TRUE)\n{\ndata = new wchar_t;\n*data = L'A';\nprintHexCharLine((char)*data);\n}\nif(GLOBAL_CONST_TRUE)\n{\n\n;\n}\n}\n}\nusing namespace FUNC_new_wchar_t_09;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__new_wchar_t_41\n{\nstatic void normG2BSink(wchar_t * data)\n{\n;\n}\nstatic void normG2B()\n{\nwchar_t * data;\ndata = NULL;\nwchar_t datanormBuffer;\ndata = &datanormBuffer;\n*data = L'A';\nprintHexCharLine((char)*data);\nnormG2BSink(data);\n}\nstatic void normB2GSink(wchar_t * data)\n{\ndelete data;\n}\n}\nusing namespace CWE401_Memory_Leak__new_wchar_t_41;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_new_wchar_t_41\n{\nstatic void normSink(wchar_t * data)\n{\n\n;\n}\nvoid norm()\n{\nwchar_t * data;\ndata = NULL;\ndata = new wchar_t;\n*data = L'A';\nprintHexCharLine((char)*data);\nnormSink(data);\n}\n}\nusing namespace FUNC_new_wchar_t_41;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normG2B()\n{\nchar * data;\ndata = NULL;\ndata = (char *)ALLOCA(100*sizeof(char));\nstrcpy(data, \"a string\");\nprintLine(data);\n{\nchar * dataCopy = data;\nchar * data = dataCopy;\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_strdup_char_31_norm()\n{\nchar * data;\ndata = NULL;\n{\nchar myString[] = \"myString\";\ndata = strdup(myString);\nprintLine(data);\n}\n{\nchar * dataCopy = data;\nchar * data = dataCopy;\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_strdup_char_31_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticReturnsTrue()\n{\nreturn 1;\n}\nstatic int staticReturnsFalse()\n{\nreturn 0;\n}\nstatic void normB2G1()\n{\nstruct _twoIntsStruct * data;\ndata = NULL;\nif(staticReturnsTrue())\n{\ndata = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\n}\nif(staticReturnsFalse())\n{\n}\nelse\n{\nfree(data);\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic int staticReturnsTrue()\n{\nreturn 1;\n}\nstatic int staticReturnsFalse()\n{\nreturn 0;\n}\nvoid FUNC_struct_twoIntsStruct_malloc_08_norm()\n{\nstruct _twoIntsStruct * data;\ndata = NULL;\nif(staticReturnsTrue())\n{\ndata = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\n}\nif(staticReturnsTrue())\n{\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_struct_twoIntsStruct_malloc_08_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic struct _twoIntsStruct * normG2BSource(struct _twoIntsStruct * data)\n{\ndata = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\nreturn data;\n}\nstatic struct _twoIntsStruct * normB2GSource(struct _twoIntsStruct * data)\n{\ndata = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\nreturn data;\n}\nstatic void normB2G()\n{\nstruct _twoIntsStruct * data;\ndata = NULL;\ndata = normB2GSource(data);\nfree(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic struct _twoIntsStruct * normSource(struct _twoIntsStruct * data)\n{\ndata = (struct _twoIntsStruct *)malloc(100*sizeof(struct _twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\nreturn data;\n}\nvoid FUNC_struct_twoIntsStruct_malloc_42_norm()\n{\nstruct _twoIntsStruct * data;\ndata = NULL;\ndata = normSource(data);\n\n;\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_struct_twoIntsStruct_malloc_42_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__struct_twoIntsStruct_realloc_33\n{\nstatic void normG2B()\n{\nstruct _twoIntsStruct * data;\nstruct _twoIntsStruct * &dataRef = data;\ndata = NULL;\ndata = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\n{\nstruct _twoIntsStruct * data = dataRef;\n;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__struct_twoIntsStruct_realloc_33;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_struct_twoIntsStruct_realloc_33\n{\nvoid norm()\n{\nstruct _twoIntsStruct * data;\nstruct _twoIntsStruct * &dataRef = data;\ndata = NULL;\ndata = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\n{\nstruct _twoIntsStruct * data = dataRef;\n\n;\n}\n}\n}\nusing namespace FUNC_struct_twoIntsStruct_realloc_33;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic struct _twoIntsStruct * normG2BSource(struct _twoIntsStruct * data)\n{\ndata = (struct _twoIntsStruct *)ALLOCA(100*sizeof(struct _twoIntsStruct));\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\nreturn data;\n}\nstatic struct _twoIntsStruct * normB2GSource(struct _twoIntsStruct * data)\n{\ndata = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\nreturn data;\n}\nstatic void normB2G()\n{\nstruct _twoIntsStruct * data;\ndata = NULL;\ndata = normB2GSource(data);\nfree(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic struct _twoIntsStruct * normSource(struct _twoIntsStruct * data)\n{\ndata = (struct _twoIntsStruct *)realloc(data, 100*sizeof(struct _twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine((twoIntsStruct *)&data[0]);\nreturn data;\n}\nvoid FUNC_struct_twoIntsStruct_realloc_42_norm()\n{\nstruct _twoIntsStruct * data;\ndata = NULL;\ndata = normSource(data);\n\n;\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_struct_twoIntsStruct_realloc_42_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normG2BSink(twoIntsStruct * data)\n{\n;\n}\nstatic void normB2GSink(twoIntsStruct * data)\n{\nfree(data);\n}\nstatic void normB2G()\n{\ntwoIntsStruct * data;\ndata = NULL;\ndata = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\nnormB2GSink(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normSink(twoIntsStruct * data)\n{\n\n;\n}\nvoid FUNC_twoIntsStruct_calloc_41_norm()\n{\ntwoIntsStruct * data;\ndata = NULL;\ndata = (twoIntsStruct *)calloc(100, sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\nnormSink(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_twoIntsStruct_calloc_41_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normB2G()\n{\ntwoIntsStruct * data;\ndata = NULL;\ngoto source;\nsource:\ndata = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\ngoto sink;\nsink:\nfree(data);\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_twoIntsStruct_malloc_18_norm()\n{\ntwoIntsStruct * data;\ndata = NULL;\ngoto source;\nsource:\ndata = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\ngoto sink;\nsink:\n\n;\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_twoIntsStruct_malloc_18_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normG2B()\n{\ntwoIntsStruct * data;\ntwoIntsStruct * *dataPtr1 = &data;\ntwoIntsStruct * *dataPtr2 = &data;\ndata = NULL;\n{\ntwoIntsStruct * data = *dataPtr1;\ndata = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\n*dataPtr1 = data;\n}\n{\ntwoIntsStruct * data = *dataPtr2;\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_twoIntsStruct_malloc_32_norm()\n{\ntwoIntsStruct * data;\ntwoIntsStruct * *dataPtr1 = &data;\ntwoIntsStruct * *dataPtr2 = &data;\ndata = NULL;\n{\ntwoIntsStruct * data = *dataPtr1;\ndata = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\n*dataPtr1 = data;\n}\n{\ntwoIntsStruct * data = *dataPtr2;\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_twoIntsStruct_malloc_32_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\ntypedef union\n{\ntwoIntsStruct * unionFirst;\ntwoIntsStruct * unionSecond;\n} CWE401_Memory_Leak__twoIntsStruct_malloc_34_unionType;\nstatic void normG2B()\n{\ntwoIntsStruct * data;\nCWE401_Memory_Leak__twoIntsStruct_malloc_34_unionType myUnion;\ndata = NULL;\ndata = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\nmyUnion.unionFirst = data;\n{\ntwoIntsStruct * data = myUnion.unionSecond;\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\ntypedef union\n{\ntwoIntsStruct * unionFirst;\ntwoIntsStruct * unionSecond;\n} FUNC_twoIntsStruct_malloc_34_unionType;\nvoid FUNC_twoIntsStruct_malloc_34_norm()\n{\ntwoIntsStruct * data;\nFUNC_twoIntsStruct_malloc_34_unionType myUnion;\ndata = NULL;\ndata = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));\nif (data == NULL) {exit(-1);}\ndata[0].intOne = 0;\ndata[0].intTwo = 0;\nprintStructLine(&data[0]);\nmyUnion.unionFirst = data;\n{\ntwoIntsStruct * data = myUnion.unionSecond;\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_twoIntsStruct_malloc_34_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normG2B()\n{\nwchar_t * data;\ndata = NULL;\ndata = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\nwcscpy(data, L\"A String\");\nprintWLine(data);\n;\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_wchar_t_malloc_01_norm()\n{\nwchar_t * data;\ndata = NULL;\ndata = (wchar_t *)malloc(100*sizeof(wchar_t));\nif (data == NULL) {exit(-1);}\nwcscpy(data, L\"A String\");\nprintWLine(data);\n\n;\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_wchar_t_malloc_01_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nstatic void normB2G1()\n{\nwchar_t * data;\ndata = NULL;\nif(globalTrue)\n{\ndata = (wchar_t *)malloc(100*sizeof(wchar_t));\nif (data == NULL) {exit(-1);}\nwcscpy(data, L\"A String\");\nprintWLine(data);\n}\nif(globalFalse)\n{\n}\nelse\n{\nfree(data);\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormB2G1();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nvoid FUNC_wchar_t_malloc_10_norm()\n{\nwchar_t * data;\ndata = NULL;\nif(globalTrue)\n{\ndata = (wchar_t *)malloc(100*sizeof(wchar_t));\nif (data == NULL) {exit(-1);}\nwcscpy(data, L\"A String\");\nprintWLine(data);\n}\nif(globalTrue)\n{\n\n;\n}\n}\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nFUNC_wchar_t_malloc_10_norm();\nreturn 0;\n}\n", "input": "", "output": "1"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace CWE401_Memory_Leak__wchar_t_realloc_33\n{\nstatic void normG2B()\n{\nwchar_t * data;\nwchar_t * &dataRef = data;\ndata = NULL;\ndata = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\nwcscpy(data, L\"A String\");\nprintWLine(data);\n{\nwchar_t * data = dataRef;\n;\n}\n}\n}\nusing namespace CWE401_Memory_Leak__wchar_t_realloc_33;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnormG2B();\nreturn 0;\n}\n", "input": "", "output": "0"}, {"instruction": "#include \"std_testcase.h\"\n#include <wchar.h>\nnamespace FUNC_wchar_t_realloc_33\n{\nvoid norm()\n{\nwchar_t * data;\nwchar_t * &dataRef = data;\ndata = NULL;\ndata = (wchar_t *)realloc(data, 100*sizeof(wchar_t));\nif (data == NULL) {exit(-1);}\nwcscpy(data, L\"A String\");\nprintWLine(data);\n{\nwchar_t * data = dataRef;\n\n;\n}\n}\n}\nusing namespace FUNC_wchar_t_realloc_33;\nint main(int argc, char * argv[])\n{\nsrand( (unsigned)time(NULL) );\nnorm();\nreturn 0;\n}\n", "input": "", "output": "1"}]